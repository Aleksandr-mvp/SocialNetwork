{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","dialog","activeLink","messages","DialogItem","props","path","id","react_default","a","createElement","className","concat","s","active","NavLink","to","activeClassName","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React","connect","dispatch","sendMessageCreator"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,WAAA,4BAAAC,SAAA,4HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAEZ,OAAP,KAAAW,OAAiBC,IAAEC,SACpCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAIV,EAAMW,gBAAiBJ,IAAEX,YAAaG,EAAMa,QCDlDC,EAJC,SAACd,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAEZ,QAASI,EAAMe,oDCCtCC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,wBAAjBD,CAfQ,SAAClB,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMe,SAAUpB,EAAMqB,cAClBlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBAAiBc,YAAY,wBAE1CxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BCsBDuB,EA9BC,SAAC5B,GAEb,IAAI6B,EAAQ7B,EAAM8B,YAEdC,EAAkBF,EAAMnC,QAAQsC,IAAI,SAAAC,GAAC,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAYrB,KAAMoB,EAAEpB,KAAMsB,IAAKF,EAAE/B,GAAIA,GAAI+B,EAAE/B,OACpFkC,EAAmBP,EAAM/B,SAASkC,IAAI,SAAAK,GAAC,OAAIlC,EAAAC,EAAAC,cAACiC,EAAD,CAASvB,QAASsB,EAAEtB,QAASoB,IAAKE,EAAEnC,OAC9D2B,EAAMU,eAO3B,OAAKvC,EAAMwC,OAGPrC,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAEd,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAEb,cACboC,GAEL5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAEV,UACdK,EAAAC,EAAAC,cAAA,WAAM+B,IAEVjC,EAAAC,EAAAC,cAACoC,EAAD,CAAgBrB,SAdJ,SAACsB,GACjB1C,EAAM2C,YAAYD,EAAOH,oBAGHpC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUjC,GAAI,4DCjBxCkC,EAA6B,SAAChB,GAAD,MAAY,CACzCW,OAAQX,EAAMiB,KAAKN,gBCeRO,sBDZiB,SAACC,GAAc,IACrCC,EADqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAd,IAAA,SAAAyB,MAAA,WAGnC,OAAKP,KAAKrD,MAAMwC,OAETrC,EAAAC,EAAAC,cAAC2C,EAAcK,KAAKrD,OAFIG,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUjC,GAAG,eAHTsC,EAAA,CACXY,IAAMb,WAUtC,OAFqCc,YAAQjB,EAARiB,CAAoCb,ICKzEa,YAfkB,SAACjC,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACiC,GACtB,MAAO,CACHpB,YAAa,SAACJ,GACVwB,EAASC,YAAmBzB,QAKzBQ,CAGbnB","file":"static/js/4.8aa811c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3BHlv\",\"dialogsItems\":\"Dialogs_dialogsItems__1i1GW\",\"dialog\":\"Dialogs_dialog__wU0rB\",\"activeLink\":\"Dialogs_activeLink__2So_c\",\"messages\":\"Dialogs_messages__3NN56\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={`${s.dialog} ${s.active}`}>\r\n        <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utility/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                    validate={[required, maxLength50]} \r\n                    name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);"],"sourceRoot":""}